{"ast":null,"code":"import axios from \"axios\";\nimport history from \"../routes/history\";\nimport * as actions from '../actionTypes/index';\nimport * as system from '../actions/system';\nimport jwtDecode from \"jwt-decode\";\nconst URL = \"http://localhost:3001\";\nexport const registerUser = credentials => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(\"\".concat(URL, \"/signin\"), credentials);\n      dispatch({\n        type: actions.AUTHENTICATED,\n        payload: {\n          auth: true\n        }\n      });\n      history.push(\"/dashboard\");\n      localStorage.setItem(\"user\", res.data.token);\n      const decodedToken = jwtDecode(res.data.token);\n      system.setProfile(decodedToken);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const login = credentials => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(\"\".concat(URL, \"/login\"), credentials);\n      dispatch({\n        type: actions.AUTHENTICATED,\n        payload: {\n          auth: true\n        }\n      });\n      history.push(\"/dashboard\");\n      localStorage.setItem(\"user\", res.data.token);\n      system.setProfile(res.data.token);\n      return;\n    } catch (e) {\n      const data = !e.response ? null : e.response.data.error;\n      dispatch({\n        type: actions.AUTH_ERROR,\n        payload: {\n          error: data\n        }\n      });\n      return;\n    }\n  };\n};","map":{"version":3,"sources":["/home/moral/workspace/start/src/actions/auth.js"],"names":["axios","history","actions","system","jwtDecode","URL","registerUser","credentials","dispatch","res","post","type","AUTHENTICATED","payload","auth","push","localStorage","setItem","data","token","decodedToken","setProfile","error","console","log","login","e","response","AUTH_ERROR"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,mBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,MAAMC,GAAG,GAAG,uBAAZ;AAGA,OAAO,MAAMC,YAAY,GAAIC,WAAD,IAAiB;AAC3C,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,WAAcL,GAAd,cAA4BE,WAA5B,CAAlB;AACAC,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAET,OAAO,CAACU,aADP;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE;AADC;AAFF,OAAD,CAAR;AAMAb,MAAAA,OAAO,CAACc,IAAR,CAAa,YAAb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,GAAG,CAACS,IAAJ,CAASC,KAAtC;AACA,YAAMC,YAAY,GAAGhB,SAAS,CAACK,GAAG,CAACS,IAAJ,CAASC,KAAV,CAA9B;AACAhB,MAAAA,MAAM,CAACkB,UAAP,CAAkBD,YAAlB;AACD,KAZD,CAYE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAhBD;AAiBD,CAlBM;AAqBP,OAAO,MAAMG,KAAK,GAAIlB,WAAD,IAAiB;AACpC,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,WAAcL,GAAd,aAA2BE,WAA3B,CAAlB;AACAC,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAET,OAAO,CAACU,aADP;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE;AADC;AAFF,OAAD,CAAR;AAMAb,MAAAA,OAAO,CAACc,IAAR,CAAa,YAAb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,GAAG,CAACS,IAAJ,CAASC,KAAtC;AACAhB,MAAAA,MAAM,CAACkB,UAAP,CAAkBZ,GAAG,CAACS,IAAJ,CAASC,KAA3B;AACA;AACD,KAZD,CAYE,OAAOO,CAAP,EAAU;AACV,YAAMR,IAAI,GAAG,CAACQ,CAAC,CAACC,QAAH,GAAc,IAAd,GAAqBD,CAAC,CAACC,QAAF,CAAWT,IAAX,CAAgBI,KAAlD;AACAd,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAET,OAAO,CAAC0B,UADP;AAEPf,QAAAA,OAAO,EAAE;AACPS,UAAAA,KAAK,EAAEJ;AADA;AAFF,OAAD,CAAR;AAMA;AACD;AACF,GAvBD;AAwBD,CAzBM","sourcesContent":["import axios from \"axios\";\nimport history from \"../routes/history\";\nimport * as actions from '../actionTypes/index'\nimport * as system from '../actions/system';\nimport jwtDecode from \"jwt-decode\";\nconst URL = \"http://localhost:3001\";\n\n\nexport const registerUser = (credentials) => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`${URL}/signin`, credentials);\n      dispatch({\n        type: actions.AUTHENTICATED,\n        payload: {\n          auth: true\n        }\n      });\n      history.push(\"/dashboard\")\n      localStorage.setItem(\"user\", res.data.token);\n      const decodedToken = jwtDecode(res.data.token);\n      system.setProfile(decodedToken);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n\nexport const login = (credentials) => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`${URL}/login`, credentials);\n      dispatch({\n        type: actions.AUTHENTICATED,\n        payload: {\n          auth: true\n        }\n      });\n      history.push(\"/dashboard\")\n      localStorage.setItem(\"user\", res.data.token);\n      system.setProfile(res.data.token);\n      return\n    } catch (e) {\n      const data = !e.response ? null : e.response.data.error;\n      dispatch({\n        type: actions.AUTH_ERROR,\n        payload: {\n          error: data\n        }\n      });\n      return\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}