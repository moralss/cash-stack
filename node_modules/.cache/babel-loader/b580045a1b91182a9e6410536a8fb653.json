{"ast":null,"code":"import _objectWithoutProperties from \"/home/moral/workspace/start/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/moral/workspace/start/src/routes/privateRoute.jsx\";\nimport React from \"react\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\nimport store from \"../store\";\nimport { AUTHENTICATED } from \"../actionTypes\";\nimport jwtDecode from \"jwt-decode\";\nimport { setProfile } from \"../actions/system\";\nconst token = localStorage.getItem(\"user\");\n\nconst authenticatedUser = () => {\n  let decodedToken;\n\n  if (token) {\n    decodedToken = jwtDecode(token);\n    let currentDate = Date.now() / 1000;\n    console.log(\"token\", decodedToken.lat > currentDate);\n\n    if (decodedToken.lat > currentDate) {\n      store.dispatch(setProfile(decodedToken));\n      store.dispatch({\n        type: AUTHENTICATED,\n        payload: {\n          auth: true\n        }\n      });\n      return;\n    }\n  }\n\n  if (!token) {\n    store.dispatch({\n      type: AUTHENTICATED,\n      payload: {\n        auth: false\n      }\n    });\n    return;\n  }\n};\n\nexport const PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  authenticatedUser();\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => store.getState().user.auth ? React.createElement(Component, Object.assign({}, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/home/moral/workspace/start/src/routes/privateRoute.jsx"],"names":["React","Router","Route","Redirect","store","AUTHENTICATED","jwtDecode","setProfile","token","localStorage","getItem","authenticatedUser","decodedToken","currentDate","Date","now","console","log","lat","dispatch","type","payload","auth","PrivateRoute","Component","component","rest","props","getState","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,MAAIC,YAAJ;;AACA,MAAIJ,KAAJ,EAAW;AACTI,IAAAA,YAAY,GAAGN,SAAS,CAACE,KAAD,CAAxB;AACA,QAAIK,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,YAAY,CAACM,GAAb,GAAmBL,WAAxC;;AACA,QAAID,YAAY,CAACM,GAAb,GAAmBL,WAAvB,EAAoC;AAClCT,MAAAA,KAAK,CAACe,QAAN,CAAeZ,UAAU,CAACK,YAAD,CAAzB;AACAR,MAAAA,KAAK,CAACe,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAEf,aADO;AAEbgB,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AAFI,OAAf;AAKA;AACD;AACF;;AAED,MAAI,CAACd,KAAL,EAAY;AACVJ,IAAAA,KAAK,CAACe,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEf,aADO;AAEbgB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAFI,KAAf;AAIA;AACD;AACF,CAxBD;;AA0BA,OAAO,MAAMC,YAAY,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AACjEf,EAAAA,iBAAiB;AACjB,SACE,oBAAC,KAAD,oBACMe,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IACXvB,KAAK,CAACwB,QAAN,GAAiBC,IAAjB,CAAsBP,IAAtB,GACE,oBAAC,SAAD,oBAAeI,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,GAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAdM","sourcesContent":["import React from \"react\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\nimport store from \"../store\";\nimport { AUTHENTICATED } from \"../actionTypes\";\nimport jwtDecode from \"jwt-decode\";\nimport { setProfile } from \"../actions/system\";\n\nconst token = localStorage.getItem(\"user\");\n\nconst authenticatedUser = () => {\n  let decodedToken;\n  if (token) {\n    decodedToken = jwtDecode(token);\n    let currentDate = Date.now() / 1000;\n    console.log(\"token\", decodedToken.lat > currentDate);\n    if (decodedToken.lat > currentDate) {\n      store.dispatch(setProfile(decodedToken));\n      store.dispatch({\n        type: AUTHENTICATED,\n        payload: { auth: true }\n      });\n\n      return;\n    }\n  }\n\n  if (!token) {\n    store.dispatch({\n      type: AUTHENTICATED,\n      payload: { auth: false }\n    });\n    return;\n  }\n};\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  authenticatedUser();\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        store.getState().user.auth ? (\n          <Component {...rest} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}