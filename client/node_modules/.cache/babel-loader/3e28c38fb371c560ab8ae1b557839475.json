{"ast":null,"code":"import _objectSpread from \"/home/moral/workspace/start/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/moral/workspace/start/src/components/forms/Form3.jsx\";\nimport React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport validate from \"../../Utils/validations/form4Validations\";\nimport history from \"../../routes/history\";\nimport renderField from \"./RenderField\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../../actions/register\";\n\nclass Form3 extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = data => {\n      this.props.registerUser(_objectSpread({}, this.props.form.form1.values, this.props.form.form2.values, data));\n      console.log(\"data\", this.props); // this.previousPage();\n\n      history.push(\"/dashboard\");\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          previousPage = _this$props.previousPage,\n          submitting = _this$props.submitting;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"confirmPassword\",\n      component: renderField,\n      type: \"password\",\n      label: \"confirm password\",\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-block space\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-block space\",\n      onClick: previousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Previous\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    form: state.form\n  };\n}\n\nconst reduxForm3 = reduxForm({\n  form: \"Form4\",\n  //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(Form3);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registerUser: data => dispatch(thunks.registerUser(data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm3);","map":{"version":3,"sources":["/home/moral/workspace/start/src/components/forms/Form3.jsx"],"names":["React","Component","reduxForm","Field","validate","history","renderField","connect","thunks","Form3","handleSubmit","data","props","registerUser","form","form1","values","form2","console","log","push","render","pristine","previousPage","submitting","mapStateToProps","state","reduxForm3","destroyOnUnmount","forceUnregisterOnUnmount","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC5BS,YAD4B,GACbC,IAAI,IAAI;AACrB,WAAKC,KAAL,CAAWC,YAAX,mBACK,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,KAAhB,CAAsBC,MAD3B,EAEK,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,KAAhB,CAAsBD,MAF3B,EAGKL,IAHL;AAMAO,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKP,KAAzB,EAPqB,CAQrB;;AACAP,MAAAA,OAAO,CAACe,IAAR,CAAa,YAAb;AACD,KAX2B;AAAA;;AAa5BC,EAAAA,MAAM,GAAG;AAAA,wBACsD,KAAKT,KAD3D;AAAA,UACCF,YADD,eACCA,YADD;AAAA,UACeY,QADf,eACeA,QADf;AAAA,UACyBC,YADzB,eACyBA,YADzB;AAAA,UACuCC,UADvC,eACuCA,UADvC;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAEd,YAAY,CAAC,KAAKA,YAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,iBADP;AAEE,MAAA,SAAS,EAAEJ,WAFb;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,WAAW,EAAC,gBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,QAAQ,EAAEgB,QAAQ,IAAIE,UAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,OAAO,EAAED,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAjBF,CADF,CADF;AAsCD;;AArD2B;;AAwD9B,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEZ,IAAAA,IAAI,EAAEY,KAAK,CAACZ;AAAd,GAAP;AACD;;AAED,MAAMa,UAAU,GAAGzB,SAAS,CAAC;AAC3BY,EAAAA,IAAI,EAAE,OADqB;AACZ;AACfc,EAAAA,gBAAgB,EAAE,KAFS;AAG3BC,EAAAA,wBAAwB,EAAE,IAHC;AAGK;AAChCzB,EAAAA;AAJ2B,CAAD,CAAT,CAKhBK,KALgB,CAAnB;;AAOA,SAASqB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLlB,IAAAA,YAAY,EAAEF,IAAI,IAAIoB,QAAQ,CAACvB,MAAM,CAACK,YAAP,CAAoBF,IAApB,CAAD;AADzB,GAAP;AAGD;;AAED,eAAeJ,OAAO,CACpBkB,eADoB,EAEpBK,kBAFoB,CAAP,CAGbH,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport validate from \"../../Utils/validations/form4Validations\";\nimport history from \"../../routes/history\";\nimport renderField from \"./RenderField\";\nimport { connect } from \"react-redux\";\nimport * as thunks from \"../../actions/register\";\n\nclass Form3 extends Component {\n  handleSubmit = data => {\n    this.props.registerUser({\n      ...this.props.form.form1.values,\n      ...this.props.form.form2.values,\n      ...data\n    });\n\n    console.log(\"data\", this.props);\n    // this.previousPage();\n    history.push(\"/dashboard\");\n  };\n\n  render() {\n    const { handleSubmit, pristine, previousPage, submitting } = this.props;\n    return (\n      <div>\n        <form onSubmit={handleSubmit(this.handleSubmit)}>\n          {/* <Field\n            class=\"input\"\n            type=\"password\"\n            component={renderField}\n            label=\"Password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          /> */}\n          <Field\n            name=\"confirmPassword\"\n            component={renderField}\n            type=\"password\"\n            label=\"confirm password\"\n            placeholder=\"Enter password\"\n          />\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-block space\"\n              disabled={pristine || submitting}\n            >\n              Submit\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-block space\"\n              onClick={previousPage}\n            >\n              Previous\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { form: state.form };\n}\n\nconst reduxForm3 = reduxForm({\n  form: \"Form4\", //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(Form3);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registerUser: data => dispatch(thunks.registerUser(data))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(reduxForm3);\n"]},"metadata":{},"sourceType":"module"}