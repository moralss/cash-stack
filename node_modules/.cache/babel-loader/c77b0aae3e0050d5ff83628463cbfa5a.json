{"ast":null,"code":"var _jsxFileName = \"/home/moral/workspace/start/src/components/forms/Form1.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { reduxForm, Field } from \"redux-form\";\nimport validate from \"../../Utils/validations/form1Validations\";\nimport renderField from \"./RenderField\";\nimport { validateEmail } from \"../../Utils/validations/asyncValidation\";\nimport { SubmissionError } from \"redux-form\";\n\nclass Form1 extends Component {\n  constructor() {\n    super();\n  }\n\n  async handleSubmit(data) {\n    // Todo\n    try {\n      const error = await validateEmail(data.email);\n\n      if (error.email) {\n        throw new SubmissionError({\n          error\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(this.props.nextPage());\n  }\n\n  render() {\n    const handleSubmit = this.props.handleSubmit;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(data => this.handleSubmit(data)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"email\",\n      component: renderField,\n      type: \"text\",\n      label: \"email\",\n      placeholder: \"Enter Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"firstName\",\n      component: renderField,\n      type: \"text\",\n      label: \"Name\",\n      placeholder: \"Enter name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"lastName\",\n      component: renderField,\n      label: \"Surname\",\n      type: \"text\",\n      placeholder: \"Enter Surname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"contact\",\n      component: renderField,\n      type: \"text\",\n      label: \"Contact\",\n      placeholder: \"Enter Contacts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn  col btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nForm1.propTypes = {};\nexport default reduxForm({\n  form: \"form1\",\n  // <------ same form name\n  destroyOnUnmount: false,\n  // <------ preserve form data\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(Form1); // export default Form1;","map":{"version":3,"sources":["/home/moral/workspace/start/src/components/forms/Form1.jsx"],"names":["React","Component","PropTypes","reduxForm","Field","validate","renderField","validateEmail","SubmissionError","Form1","constructor","handleSubmit","data","error","email","e","console","log","props","nextPage","render","propTypes","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAEA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAC5BS,EAAAA,WAAW,GAAG;AACZ;AACD;;AAED,QAAMC,YAAN,CAAmBC,IAAnB,EAAyB;AACvB;AACA,QAAI;AACF,YAAMC,KAAK,GAAG,MAAMN,aAAa,CAACK,IAAI,CAACE,KAAN,CAAjC;;AAEA,UAAID,KAAK,CAACC,KAAV,EAAiB;AACf,cAAM,IAAIN,eAAJ,CAAoB;AACxBK,UAAAA;AADwB,SAApB,CAAN;AAGD;AACF,KARD,CAQE,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAX,EAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCT,YADD,GACkB,KAAKO,KADvB,CACCP,YADD;AAEP,WACE;AAAM,MAAA,QAAQ,EAAEA,YAAY,CAACC,IAAI,IAAI,KAAKD,YAAL,CAAkBC,IAAlB,CAAT,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAEN,WAFb;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,WAAW,EAAC,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,SAAS,EAAEA,WAFb;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAC,MAJR;AAKE,MAAA,WAAW,EAAC,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAgBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAEA,WAFb;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,eALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAuBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,SAAS,EAAEA,WAFb;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,WAAW,EAAC,gBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EA8BE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF,CADF;AAoCD;;AA5D2B;;AA+D9BG,KAAK,CAACY,SAAN,GAAkB,EAAlB;AAEA,eAAelB,SAAS,CAAC;AACvBmB,EAAAA,IAAI,EAAE,OADiB;AACR;AACfC,EAAAA,gBAAgB,EAAE,KAFK;AAEE;AACzBC,EAAAA,wBAAwB,EAAE,IAHH;AAGS;AAChCnB,EAAAA;AAJuB,CAAD,CAAT,CAKZI,KALY,CAAf,C,CAOA","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { reduxForm, Field } from \"redux-form\";\nimport validate from \"../../Utils/validations/form1Validations\";\nimport renderField from \"./RenderField\";\nimport { validateEmail } from \"../../Utils/validations/asyncValidation\";\nimport { SubmissionError } from \"redux-form\";\n\nclass Form1 extends Component {\n  constructor() {\n    super();\n  }\n\n  async handleSubmit(data) {\n    // Todo\n    try {\n      const error = await validateEmail(data.email);\n\n      if (error.email) {\n        throw new SubmissionError({\n          error\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(this.props.nextPage());\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <form onSubmit={handleSubmit(data => this.handleSubmit(data))}>\n        <Field\n          name=\"email\"\n          component={renderField}\n          type=\"text\"\n          label=\"email\"\n          placeholder=\"Enter Email\"\n        />\n        <Field\n          name=\"firstName\"\n          component={renderField}\n          type=\"text\"\n          label=\"Name\"\n          placeholder=\"Enter name\"\n        />\n\n        <Field\n          name=\"lastName\"\n          component={renderField}\n          label=\"Surname\"\n          type=\"text\"\n          placeholder=\"Enter Surname\"\n        />\n        <Field\n          name=\"contact\"\n          component={renderField}\n          type=\"text\"\n          label=\"Contact\"\n          placeholder=\"Enter Contacts\"\n        />\n        <button type=\"submit\" className=\"btn  col btn-block\">\n          Next\n        </button>\n      </form>\n    );\n  }\n}\n\nForm1.propTypes = {};\n\nexport default reduxForm({\n  form: \"form1\", // <------ same form name\n  destroyOnUnmount: false, // <------ preserve form data\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(Form1);\n\n// export default Form1;\n"]},"metadata":{},"sourceType":"module"}