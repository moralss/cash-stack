{"ast":null,"code":"import _objectWithoutProperties from \"/home/moral/workspace/start/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/moral/workspace/start/src/routes/privateRoute.jsx\";\nimport React from \"react\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\nimport store from \"../store\";\nimport { AUTHENTICATED } from \"../actionTypes\";\nimport jwtDecode from \"jwt-decode\";\nconst user = localStorage.getItem(\"user\");\n\nconst authenticatedUser = () => {\n  let decodedToken;\n\n  if (token) {\n    decodedToken = jwtDecode(token);\n    let currentDate = Date.now() / 1000;\n\n    if (decodedToken.lat > currentDate) {\n      store.dispatch({\n        type: actions.OWNER_AUTHENTICATED,\n        payload: false\n      });\n      return;\n    }\n  }\n\n  if (!token) {\n    store.dispatch({\n      type: actions.OWNER_AUTHENTICATED,\n      payload: false\n    });\n  }\n};\n\nauthenticatedUser();\n\nif (user) {\n  store.dispatch({\n    type: AUTHENTICATED,\n    payload: {\n      auth: true\n    }\n  });\n}\n\nvar authenticated = store.getState().user.auth;\nexport const PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return authenticated.auth ? React.createElement(Route, Object.assign({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/home/moral/workspace/start/src/routes/privateRoute.jsx"],"names":["React","Router","Route","Redirect","store","AUTHENTICATED","jwtDecode","user","localStorage","getItem","authenticatedUser","decodedToken","token","currentDate","Date","now","lat","dispatch","type","actions","OWNER_AUTHENTICATED","payload","auth","authenticated","getState","PrivateRoute","Component","component","rest"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,MAAIC,YAAJ;;AACA,MAAIC,KAAJ,EAAW;AACTD,IAAAA,YAAY,GAAGL,SAAS,CAACM,KAAD,CAAxB;AACA,QAAIC,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAA/B;;AACA,QAAIJ,YAAY,CAACK,GAAb,GAAmBH,WAAvB,EAAoC;AAClCT,MAAAA,KAAK,CAACa,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAEC,OAAO,CAACC,mBADD;AAEbC,QAAAA,OAAO,EAAE;AAFI,OAAf;AAKA;AACD;AACF;;AAED,MAAI,CAACT,KAAL,EAAY;AACVR,IAAAA,KAAK,CAACa,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEC,OAAO,CAACC,mBADD;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;AAID;AACF,CArBD;;AAuBAX,iBAAiB;;AAEjB,IAAIH,IAAJ,EAAU;AACRH,EAAAA,KAAK,CAACa,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAEb,aAAR;AAAuBgB,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAAhC,GAAf;AACD;;AAED,IAAIC,aAAa,GAAGnB,KAAK,CAACoB,QAAN,GAAiBjB,IAAjB,CAAsBe,IAA1C;AACA,OAAO,MAAMG,YAAY,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AACjE,SAAOL,aAAa,CAACD,IAAd,GAAqB,oBAAC,KAAD,oBAAWM,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB,GAA2C,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlD;AACD,CAFM","sourcesContent":["import React from \"react\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\nimport store from \"../store\";\nimport { AUTHENTICATED } from \"../actionTypes\";\nimport jwtDecode from \"jwt-decode\";\n\nconst user = localStorage.getItem(\"user\");\n\nconst authenticatedUser = () => {\n  let decodedToken;\n  if (token) {\n    decodedToken = jwtDecode(token);\n    let currentDate = Date.now() / 1000;\n    if (decodedToken.lat > currentDate) {\n      store.dispatch({\n        type: actions.OWNER_AUTHENTICATED,\n        payload: false\n      });\n\n      return;\n    }\n  }\n\n  if (!token) {\n    store.dispatch({\n      type: actions.OWNER_AUTHENTICATED,\n      payload: false\n    });\n  }\n};\n\nauthenticatedUser();\n\nif (user) {\n  store.dispatch({ type: AUTHENTICATED, payload: { auth: true } });\n}\n\nvar authenticated = store.getState().user.auth;\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  return authenticated.auth ? <Route {...rest} /> : <Redirect to=\"/\" />;\n};\n"]},"metadata":{},"sourceType":"module"}