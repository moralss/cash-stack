{"ast":null,"code":"import axios from \"axios\";\nimport history from \"../routes/history\";\nimport * as actions from '../actionTypes/index';\nimport jwtDecode from \"jwt-decode\";\nimport store from \"../store\";\nconst URL = \"http://localhost:3001\";\nexport const getMembers = id => {\n  return async dispatch => {\n    try {\n      const userId = store.getState().user.profile;\n      console.log(\"in action \", userId);\n      var query = \"?_userId=\".concat(id);\n      const res = await axios.get(\"\".concat(URL, \"/AllMembers\") + query);\n      dispatch({\n        type: actions.SAVE_MEMBERS,\n        payload: {\n          allMembers: res\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/home/moral/workspace/start/src/actions/queries.js"],"names":["axios","history","actions","jwtDecode","store","URL","getMembers","id","dispatch","userId","getState","user","profile","console","log","query","res","get","type","SAVE_MEMBERS","payload","allMembers","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQ;AAChC,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAGL,KAAK,CAACM,QAAN,GAAiBC,IAAjB,CAAsBC,OAArC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,MAA1B;AACA,UAAIM,KAAK,sBAAeR,EAAf,CAAT;AACA,YAAMS,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,UAAGZ,GAAH,mBAAsBU,KAAhC,CAAlB;AAEAP,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAEhB,OAAO,CAACiB,YADP;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,UAAU,EAAEL;AADL;AAFF,OAAD,CAAR;AAMD,KAZD,CAYE,OAAOM,KAAP,EAAc;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;AACF,GAhBD;AAiBD,CAlBM","sourcesContent":["import axios from \"axios\";\nimport history from \"../routes/history\";\nimport * as actions from '../actionTypes/index'\nimport jwtDecode from \"jwt-decode\";\nimport store from \"../store\";\nconst URL = \"http://localhost:3001\";\n\nexport const getMembers = (id) => {\n  return async dispatch => {\n    try {\n      const userId = store.getState().user.profile\n      console.log(\"in action \", userId)\n      var query = `?_userId=${id}`\n      const res = await axios.get(`${URL}/AllMembers` + query);\n\n      dispatch({\n        type: actions.SAVE_MEMBERS,\n        payload: {\n          allMembers: res\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}