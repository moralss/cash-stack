{"ast":null,"code":"var _jsxFileName = \"/home/moral/workspace/start/src/components/forms/Form1.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { reduxForm, Field } from \"redux-form\";\nimport validate from \"../../Utils/validations/form1Validations\";\nimport renderField from \"./RenderField\";\nimport { validateEmail } from \"../../Utils/validations/asyncValidation\";\nimport { SubmissionError } from \"redux-form\";\n\nclass Form1 extends Component {\n  constructor() {\n    super();\n  }\n\n  async handleSubmit(data) {\n    try {\n      const error = await validateEmail(data.email);\n      console.log(\"dfsf\", data.email);\n\n      if (error.email) {\n        throw new SubmissionError({\n          error\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(this.props.nextPage());\n  }\n\n  render() {\n    console.log(this.state);\n    const handleSubmit = this.props.handleSubmit;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(data => this.handleSubmit(data)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"email\",\n      component: renderField,\n      type: \"text\",\n      label: \"email\",\n      placeholder: \"Enter Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"firstName\",\n      component: renderField,\n      type: \"text\",\n      label: \"Name\",\n      placeholder: \"Enter name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"lastName\",\n      component: renderField,\n      label: \"Surname\",\n      type: \"text\",\n      placeholder: \"Enter Surname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), \" \", React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"contact\",\n      component: renderField,\n      type: \"text\",\n      label: \"Contact\",\n      placeholder: \"Enter Contacts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), \" \", React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"pioneerRefs\",\n      component: renderField,\n      type: \"text\",\n      label: \"Pioneer Refs no\",\n      placeholder: \"Enter Refs no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), \" \", React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Next \"), \" \");\n  }\n\n}\n\nForm1.propTypes = {};\nexport default reduxForm({\n  form: \"form1\",\n  // <------ same form name\n  destroyOnUnmount: false,\n  // <------ preserve form data\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(Form1); // export default Form1;","map":{"version":3,"sources":["/home/moral/workspace/start/src/components/forms/Form1.js"],"names":["React","Component","PropTypes","reduxForm","Field","validate","renderField","validateEmail","SubmissionError","Form1","constructor","handleSubmit","data","error","email","console","log","e","props","nextPage","render","state","propTypes","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  reduxForm,\n  Field\n} from \"redux-form\";\nimport validate from \"../../Utils/validations/form1Validations\";\nimport renderField from \"./RenderField\";\nimport {\n  validateEmail\n} from \"../../Utils/validations/asyncValidation\";\nimport {\n  SubmissionError\n} from \"redux-form\";\n\nclass Form1 extends Component {\n  constructor() {\n    super();\n  }\n\n  async handleSubmit(data) {\n    try {\n      const error = await validateEmail(data.email);\n      console.log(\"dfsf\", data.email);\n\n      if (error.email) {\n        throw new SubmissionError({\n          error\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(this.props.nextPage());\n  }\n\n  render() {\n    console.log(this.state);\n    const {\n      handleSubmit\n    } = this.props;\n    return ( <\n      form onSubmit = {\n        handleSubmit(data => this.handleSubmit(data))\n      } >\n      <\n      div >\n      <\n      Field name = \"email\"\n      component = {\n        renderField\n      }\n      type = \"text\"\n      label = \"email\"\n      placeholder = \"Enter Email\" /\n      >\n      <\n      /div> <\n      div >\n      <\n      Field name = \"firstName\"\n      component = {\n        renderField\n      }\n      type = \"text\"\n      label = \"Name\"\n      placeholder = \"Enter name\" /\n      >\n      <\n      /div> <\n      div >\n      <\n      Field name = \"lastName\"\n      component = {\n        renderField\n      }\n      label = \"Surname\"\n      type = \"text\"\n      placeholder = \"Enter Surname\" /\n      >\n      <\n      /div> <\n      div className = \"field\" >\n      <\n      Field name = \"contact\"\n      component = {\n        renderField\n      }\n      type = \"text\"\n      label = \"Contact\"\n      placeholder = \"Enter Contacts\" /\n      >\n      <\n      /div> <\n      div className = \"field\" >\n      <\n      Field name = \"pioneerRefs\"\n      component = {\n        renderField\n      }\n      type = \"text\"\n      label = \"Pioneer Refs no\"\n      placeholder = \"Enter Refs no\" /\n      >\n      <\n      /div> <\n      button type = \"submit\"\n      className = \"next\" >\n      Next <\n      /button> <\n      /form>\n    );\n  }\n}\n\nForm1.propTypes = {};\n\nexport default reduxForm({\n  form: \"form1\", // <------ same form name\n  destroyOnUnmount: false, // <------ preserve form data\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(Form1);\n\n// export default Form1;"]},"metadata":{},"sourceType":"module"}