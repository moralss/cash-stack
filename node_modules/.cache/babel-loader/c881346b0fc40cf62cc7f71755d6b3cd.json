{"ast":null,"code":"var _jsxFileName = \"/home/moral/workspace/start/src/components/forms/LoginForm.jsx\";\nimport React, { Component } from \"react\";\nimport validate from \"../../Utils/validations/form1Validations\";\nimport renderField from \"./RenderField\";\nimport history from \"../../routes/history\";\nimport { reduxForm, Field } from \"redux-form\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  sendData() {\n    history.push(\"/dashboard\");\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"form\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Field, {\n      component: renderField,\n      type: \"text\",\n      label: \"email\",\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Field, {\n      component: renderField,\n      type: \"text\",\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn-re\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"password recovery\"), React.createElement(\"button\", {\n      className: \"btn-block btn col \",\n      onClick: () => this.sendData(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"send\"));\n  }\n\n}\n\nLoginForm.propTypes = {};\nexport default reduxForm({\n  form: \"form2\",\n  // <------ same form name\n  destroyOnUnmount: false,\n  // <------ preserve form data\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(LoginForm); // export default LoginForm;","map":{"version":3,"sources":["/home/moral/workspace/start/src/components/forms/LoginForm.jsx"],"names":["React","Component","validate","renderField","history","reduxForm","Field","LoginForm","handleChange","event","setState","target","name","value","sendData","push","render","console","log","state","propTypes","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCO,YADgC,GACjBC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAL+B;AAAA;;AAOhCC,EAAAA,QAAQ,GAAG;AACTV,IAAAA,OAAO,CAACW,IAAR,CAAa,YAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEhB,WADb;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,WAAW,EAAC,aANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEA,WADb;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,WAAW,EAAC,gBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAkBE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAlBF,EAoBE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAuC,MAAA,OAAO,EAAE,MAAM,KAAKW,QAAL,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,CADF;AA0BD;;AAvC+B;;AA0ClCP,SAAS,CAACa,SAAV,GAAsB,EAAtB;AAEA,eAAef,SAAS,CAAC;AACvBgB,EAAAA,IAAI,EAAE,OADiB;AACR;AACfC,EAAAA,gBAAgB,EAAE,KAFK;AAEE;AACzBC,EAAAA,wBAAwB,EAAE,IAHH;AAGS;AAChCrB,EAAAA;AAJuB,CAAD,CAAT,CAKZK,SALY,CAAf,C,CAOA","sourcesContent":["import React, { Component } from \"react\";\nimport validate from \"../../Utils/validations/form1Validations\";\nimport renderField from \"./RenderField\";\nimport history from \"../../routes/history\";\nimport { reduxForm, Field } from \"redux-form\";\n\nclass LoginForm extends Component {\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  sendData() {\n    history.push(\"/dashboard\");\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <form className=\"container\">\n        <Field\n          component={renderField}\n          type=\"text\"\n          label=\"email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n        />\n        <Field\n          component={renderField}\n          type=\"text\"\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Enter password\"\n        />\n\n        <button className=\"btn-re\">password recovery</button>\n\n        <button className=\"btn-block btn col \" onClick={() => this.sendData()}>\n          send\n        </button>\n      </form>\n    );\n  }\n}\n\nLoginForm.propTypes = {};\n\nexport default reduxForm({\n  form: \"form2\", // <------ same form name\n  destroyOnUnmount: false, // <------ preserve form data\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(LoginForm);\n\n// export default LoginForm;\n"]},"metadata":{},"sourceType":"module"}