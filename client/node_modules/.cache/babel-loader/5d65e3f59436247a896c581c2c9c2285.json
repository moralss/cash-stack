{"ast":null,"code":"var _jsxFileName = \"/home/moral/workspace/business/cash-stack/src/components/Dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Dialog from \"./Dialog\";\nimport Footer from \"./Footer\";\nimport * as actions from \"../actions/queries\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  componentWillMount() {\n    this.props.getMembers(this.props.profile.id);\n    this.setState({\n      isLoading: true\n    });\n    var interval = setInterval(() => {\n      this.props.getMembers(this.props.profile.id);\n      this.setState({\n        isLoading: false\n      });\n    }, 4000);\n    clearInterval(interval);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: \"profile  card \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Profile \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \" grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"name \"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" \", this.props.profile.name, \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \" grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"refs \"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" \", this.props.profile.refNumber, \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"status \"), React.createElement(\"h6\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" not active\"))), React.createElement(\"h4\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, !this.isLoading ? this.props.memberCount : \"loading..\", \" active members\"), React.createElement(Dialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nDashboard.propTypes = {};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getMembers: data => dispatch(actions.getMembers(data))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.user.profile,\n    memberCount: state.user.memberCount\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/home/moral/workspace/business/cash-stack/src/components/Dashboard.jsx"],"names":["React","Component","connect","Dialog","Footer","actions","Dashboard","constructor","state","isLoading","componentWillMount","props","getMembers","profile","id","setState","interval","setInterval","clearInterval","render","textAlign","name","refNumber","memberCount","propTypes","mapDispatchToProps","dispatch","data","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Dialog from \"./Dialog\";\nimport Footer from \"./Footer\";\nimport * as actions from \"../actions/queries\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false\n    };\n  }\n  componentWillMount() {\n    this.props.getMembers(this.props.profile.id);\n    this.setState({ isLoading: true });\n    var interval = setInterval(() => {\n      this.props.getMembers(this.props.profile.id);\n      this.setState({ isLoading: false });\n    }, 4000);\n    clearInterval(interval);\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }} className=\"profile  card \">\n          <h4>Profile </h4>\n          <hr />\n          <div>\n            <label className=\" grey-text\">name </label>\n            <h6> {this.props.profile.name} </h6>\n          </div>\n          <div>\n            <label className=\" grey-text\">refs </label>\n            <h6> {this.props.profile.refNumber} </h6>\n          </div>\n          <div>\n            <label className=\"grey-text\">status </label>\n            <h6 className=\"red-text\"> not active</h6>\n          </div>\n        </div>\n\n        <h4 style={{ textAlign: \"center\" }} className=\"primary\">\n          {!this.isLoading ? this.props.memberCount : \"loading..\"} active\n          members\n        </h4> \n\n        <Dialog />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getMembers: data => dispatch(actions.getMembers(data))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.user.profile,\n    memberCount: state.user.memberCount\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}