{"ast":null,"code":"import _objectWithoutProperties from \"/home/moral/workspace/start/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/moral/workspace/start/src/routes/privateRoute.jsx\";\nimport React from \"react\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\nimport store from \"../store\";\nimport { AUTHENTICATED } from \"../actionTypes\";\nimport jwtDecode from \"jwt-decode\";\nimport { setProfile } from \"../actions/system\";\nconst token = localStorage.getItem(\"user\");\n\nconst authenticatedUser = () => {\n  // let decodedToken;\n  // if (token) {\n  //   decodedToken = jwtDecode(token);\n  //   let currentDate = Date.now() / 1000;\n  //   if (decodedToken.lat > currentDate) {\n  //     store.dispatch(setProfile(decodedToken));\n  //     store.dispatch({\n  //       type: AUTHENTICATED,\n  //       payload: { auth: true }\n  //     });\n  //     return;\n  //   }\n  // }\n  if (token) {\n    const decodedToken = jwtDecode(token);\n    store.dispatch(setProfile(decodedToken)); // store.dispatch({\n    //   type: AUTHENTICATED,\n    //   payload: { auth: true }\n    // });\n  }\n}; // if (token) {\n//   store.dispatch({ type: AUTHENTICATED, payload: { auth: true } });\n// }\n\n\nexport const PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  authenticatedUser(); // var authenticated = store.getState().user.auth;\n  // console.log(\"authllllllllllllllllllllllll\", authenticated);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => localStorage.getItem(\"user\") ? React.createElement(Component, Object.assign({}, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/home/moral/workspace/start/src/routes/privateRoute.jsx"],"names":["React","Router","Route","Redirect","store","AUTHENTICATED","jwtDecode","setProfile","token","localStorage","getItem","authenticatedUser","decodedToken","dispatch","PrivateRoute","Component","component","rest","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,MAAIH,KAAJ,EAAW;AACT,UAAMI,YAAY,GAAGN,SAAS,CAACE,KAAD,CAA9B;AACAJ,IAAAA,KAAK,CAACS,QAAN,CAAeN,UAAU,CAACK,YAAD,CAAzB,EAFS,CAGT;AACA;AACA;AACA;AACD;AACF,CAxBD,C,CA0BA;AACA;AACA;;;AAEA,OAAO,MAAME,YAAY,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AACjEN,EAAAA,iBAAiB,GADgD,CAEjE;AACA;;AACA,SACE,oBAAC,KAAD,oBACMM,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IACXT,YAAY,CAACC,OAAb,CAAqB,MAArB,IACE,oBAAC,SAAD,oBAAeO,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,GAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAhBM","sourcesContent":["import React from \"react\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\nimport store from \"../store\";\nimport { AUTHENTICATED } from \"../actionTypes\";\nimport jwtDecode from \"jwt-decode\";\nimport { setProfile } from \"../actions/system\";\n\nconst token = localStorage.getItem(\"user\");\n\nconst authenticatedUser = () => {\n  // let decodedToken;\n  // if (token) {\n  //   decodedToken = jwtDecode(token);\n  //   let currentDate = Date.now() / 1000;\n  //   if (decodedToken.lat > currentDate) {\n  //     store.dispatch(setProfile(decodedToken));\n  //     store.dispatch({\n  //       type: AUTHENTICATED,\n  //       payload: { auth: true }\n  //     });\n\n  //     return;\n  //   }\n  // }\n\n  if (token) {\n    const decodedToken = jwtDecode(token);\n    store.dispatch(setProfile(decodedToken));\n    // store.dispatch({\n    //   type: AUTHENTICATED,\n    //   payload: { auth: true }\n    // });\n  }\n};\n\n// if (token) {\n//   store.dispatch({ type: AUTHENTICATED, payload: { auth: true } });\n// }\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  authenticatedUser();\n  // var authenticated = store.getState().user.auth;\n  // console.log(\"authllllllllllllllllllllllll\", authenticated);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        localStorage.getItem(\"user\") ? (\n          <Component {...rest} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}